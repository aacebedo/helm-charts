apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ include "yamtrack.fullname" . }}-yamtrack'
  annotations:
    datree.skip/CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE: Unable to run if readonly
spec:
  selector:
    matchLabels:
      {{- include "yamtrack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: yamtrack
  strategy: {}
  template:
    metadata:
      labels:
        {{- include "yamtrack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: yamtrack
    spec:
      containers:
        - envFrom:
          - configMapRef:
              name: '{{ include "yamtrack.fullname" . }}-yamtrack'
          image: '{{ tpl .Values.yamtrack.repository.image $ }}:{{ tpl .Values.yamtrack.repository.tag $ }}'
          imagePullPolicy: {{ .Values.yamtrack.pullPolicy }}
          name: yamtrack
          securityContext:
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 12
            timeoutSeconds: 5
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
          resources:
            limits:
              cpu: 1500m
              memory: 2400Mi
            requests:
              cpu: 75m
              memory: 200Mi
          ports:
            - containerPort: 8000
              name: yamtrack
          {{- if .Values.yamtrack.resources }}
          resources:
            {{ .Values.yamtrack.resources | toYaml | nindent 10 }}
          {{- end }}
          volumeMounts:
            - mountPath: /yamtrack/db
              name: db
            - mountPath: /tmp
              name: tmp-volume
      initContainers:
        - command:
          - /bin/sh
          - -c
          - |-
            until nc -z {{ include "yamtrack.fullname" . }}-redis 6379; do
              sleep 1;
            done
          image: busybox:latest
          name: wait-for-redis
      {{- if .Values.yamtrack.nodeSelector }}
      nodeSelector:
        {{- .Values.yamtrack.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      volumes:
        - name: db
      {{- if .Values.yamtrack.persistence.db.enabled }}
          persistentVolumeClaim:
            claimName: '{{ include "yamtrack.fullname" . }}-yamtrack-db'
      {{- else }}
          emptyDir: {}
      {{- end }}
        - name: tmp-volume
          emptyDir: {}
